{% layout "layout.liquid" %}
{% block content %}

<style>
    .btn-group {
        position: relative;
        display: inline-block;
        font-size: 0;
        white-space: nowrap;
        vertical-align: middle;
        margin: 1rem;
        padding: 1rem;
    }

    .btn-group>.btn:first-child {
        margin-left: 0;
        -webkit-border-bottom-left-radius: 4px;
        border-bottom-left-radius: 4px;
        -webkit-border-top-left-radius: 4px;
        border-top-left-radius: 4px;
        -moz-border-radius-bottomleft: 4px;
        -moz-border-radius-topleft: 4px;
    }

    .btn-group>.btn:last-child,
    .btn-group>.dropdown-toggle {
        -webkit-border-top-right-radius: 4px;
        border-top-right-radius: 4px;
        -webkit-border-bottom-right-radius: 4px;
        border-bottom-right-radius: 4px;
        -moz-border-radius-topright: 4px;
        -moz-border-radius-bottomright: 4px;
    }

    .btn-group>.btn+.btn {
        margin-left: -1px;
    }

    .btn-group>.btn,
    .btn-group>.dropdown-menu {
        font-size: 14px;
    }

    .btn-group>.btn {
        position: relative;
        -webkit-border-radius: 0;
        -moz-border-radius: 0;
        border-radius: 0;
    }

    .btn.active,
    .btn:active {
        background-color: white;
        background-image: none;
        outline: 0;
        -webkit-box-shadow: inset 0 2px 4px rgb(0 0 0 / 15%), 0 1px 2px rgb(0 0 0 / 5%);
        -moz-box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.15), 0 1px 2px rgba(0, 0, 0, 0.05);
        box-shadow: inset 0 2px 4px rgb(0 0 0 / 15%), 0 1px 2px rgb(0 0 0 / 5%);
    }

    .btn {
        display: inline-block;
        padding: 4px 12px;
        margin-bottom: 0;
        font-size: 14px;
        line-height: 20px;
        color: #333;
        text-align: center;
        text-shadow: 0 1px 1px rgb(255 255 255 / 75%);
        vertical-align: middle;
        cursor: pointer;
        background-color: white;
        background-image: -moz-linear-gradient(top, #fff, #e6e6e6);
        background-image: -webkit-gradient(linear, 0 0, 0 100%, from(#fff), to(#e6e6e6));
        background-image: -webkit-linear-gradient(top, #fff, #e6e6e6);
        background-image: -o-linear-gradient(top, #fff, #e6e6e6);
        background-image: linear-gradient(to bottom, #fff, #e6e6e6);
        background-repeat: repeat-x;
        border: 1px solid #bbb;
        border-color: #e6e6e6 #e6e6e6 #bfbfbf;
        border-color: rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.1) rgba(0, 0, 0, 0.25);
        border-bottom-color: #a2a2a2;
        -webkit-border-radius: 4px;
        -moz-border-radius: 4px;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 0 rgb(255 255 255 / 20%), 0 1px 2px rgb(0 0 0 / 5%);
        -moz-box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.2), 0 1px 2px rgba(0, 0, 0, 0.05);
        box-shadow: inset 0 1px 0 rgb(255 255 255 / 20%), 0 1px 2px rgb(0 0 0 / 5%);
    }

    .axis-label {
        fill: #000;
        font-size: 16px;
        text-anchor: middle;
    }

    #bar_chart {
        background-color: white;
        border-radius: .4rem;
        width: 50%;
    }

    .myYaxis {
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
    }

    .myXaxis {
        font-size: 1.1rem;
        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;

    }
</style>

<div class="btn-group" data-toggle="buttons-radio">
    <button type="button" onclick="update(days)" class="btn switch">Days</button>
    <button type="button" onclick="update(weeks)" class="btn switch">Weeks</button>
    <button type="button" onclick="update(months)" class="btn switch">Months</button>
</div>

<div id="bar_chart"></div>

<script src="https://d3js.org/d3.v4.min.js"></script>
<script src="https://d3js.org/d3-axis.v1.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/d3-legend/2.25.6/d3-legend.min.js"></script>


<script>

    // Minutes
    var days = [
        { group: "Monday", value: 1 },
        { group: "Tuesday", value: 2.2 },
        { group: "Wednesday", value: .45 },
        { group: "Thursday", value: .30 },
        { group: "Friday", value: 1.4 },
        { group: "Saturday", value: 2 },
        { group: "Sunday", value: 1.6 }
    ];

    // Hours 
    var weeks = [
        { group: "Week 1", value: 2 },
        { group: "Week 2", value: 1.5 },
        { group: "Week 3", value: 3 },
        { group: "Week 4", value: 5 },
        { group: "Week 5", value: 4 },
        { group: "Week 6", value: 3.5 },
        { group: "Week 7", value: 5.25 }
    ];

    // Hours
    var months = [
        { group: "January", value: 16 },
        { group: "February", value: 20 },
        { group: "March", value: 18 },
        { group: "April", value: 14 },
        { group: "May", value: 13 },
        { group: "June", value: 15 },
        { group: "July", value: 16 },
        { group: "August", value: 19 },
        { group: "September", value: 22 },
        { group: "October", value: 21 },
        { group: "November", value: 24 },
        { group: "December", value: 17 }
    ];

    // set the dimensions and margins of the graph
    var margin = { top: 30, right: 30, bottom: 70, left: 60 },
        width = 700 - margin.left - margin.right,
        height = 400 - margin.top - margin.bottom;

    // append the svg object to the body of the page
    var svg = d3.select("#bar_chart")
        .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform",
            "translate(" + margin.left + "," + margin.top + ")");


    var x = d3.scaleBand()
        .range([0, width])
        .padding(0.2)
    var xAxis = svg.append("g")
        .attr("transform", "translate(0," + height + ")")
        .attr("class", "myXaxis")

    var y = d3.scaleLinear()
        .range([height, 0]);
    var yAxis = svg.append("g")
        .attr("class", "myYaxis")



    function update(data) {
        x.domain(data.map(function (d) { return d.group }))
        xAxis.call(d3.axisBottom(x))

        y.domain([0, d3.max(data, function (d) { return d.value })]);
        yAxis.call(d3.axisLeft(y))
            .transition()
            .duration(1000)

        let length = data.length
        // Scale Linear is a great tool for bar charts to see the difference in values through scaling the color
        let color = d3.scaleLinear()
            .domain([0, length])
            .range(['#bbdefb', '#2196f3']);

        var val = svg.selectAll("rect")
            .data(data)

        val
            .enter()
            .append("rect")
            .merge(val)
            .transition()
            .duration(1000)
            .attr("x", function (d) { return x(d.group); })
            .attr("y", function (d) {
                return y(d.value)
            })
            .attr("width", x.bandwidth())
            .attr("height", function (d) { return height - y(d.value); })
            .attr("fill", function (d) { return color(d.value) })

        val
            .exit()
            .remove()
    }

    update(days)

</script>

{% endblock %}